name: SonarCloud
on:
  schedule:
    - cron: "0 5 * * 2,4,6"
#  pull_request:
#    types:
#      - opened
#      - synchronize
#      - reopened

permissions: {}

jobs:
  gotest:
    name: "Generate Golang Test Reports"
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: "Checkout repo"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
        with:
          persist-credentials: false

      - name: "Setup Go"
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 #v5.5.0
        with:
          go-version: "1.23"
          check-latest: false
          cache-dependency-path: |
            service/go.sum
            sdk/go.sum
            examples/go.sum
            protocol/go/go.sum

      - name: "Generate Golang Test Reports"
        run: go test -v -coverprofile coverage.out -json ./sdk/... ./service/... ./lib/ocrypto | tee coverage.json

      - name: "Cover report"
        run: go tool cover -func=coverage.out

      - name: "Archive Golang Test Results"
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 #v4.6.2
        with:
          name: code-coverage-report
          path: coverage.*
          retention-days: 3

  sonarcloud:
    name: "SonarCloud"
    runs-on: ubuntu-latest
    needs: [gotest]
    permissions:
      contents: read
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: "Download Code Coverage Report"
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 #v4.3.0
        with:
          name: code-coverage-report

      - name: "SonarCloud Scan"
        uses: SonarSource/sonarqube-scan-action@2500896589ef8f7247069a56136f8dc177c27ccf #v5.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
