openapi: 3.1.0
info:
  title: authorization
paths:
  /v1/authorization:
    post:
      tags:
        - authorization.AuthorizationService
      summary: GetDecisions
      operationId: authorization.AuthorizationService.GetDecisions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authorization.GetDecisionsRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authorization.GetDecisionsResponse'
  /v1/token/authorization:
    post:
      tags:
        - authorization.AuthorizationService
      summary: GetDecisionsByToken
      operationId: authorization.AuthorizationService.GetDecisionsByToken
      parameters:
        - name: decisionRequests.actions.id
          in: query
          description: Generated uuid in database
          schema:
            type: string
            title: id
            description: Generated uuid in database
        - name: decisionRequests.actions.standard
          in: query
          description: Deprecated
          schema:
            title: standard
            description: Deprecated
            $ref: '#/components/schemas/policy.Action.StandardAction'
        - name: decisionRequests.actions.custom
          in: query
          description: Deprecated
          schema:
            type: string
            title: custom
            description: Deprecated
        - name: decisionRequests.actions.name
          in: query
          schema:
            type: string
            title: name
        - name: decisionRequests.actions.metadata.createdAt.seconds
          in: query
          description: |-
            Represents seconds of UTC time since Unix epoch
             1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
             9999-12-31T23:59:59Z inclusive.
          schema:
            type:
              - integer
              - string
            title: seconds
            format: int64
            description: |-
              Represents seconds of UTC time since Unix epoch
               1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
               9999-12-31T23:59:59Z inclusive.
        - name: decisionRequests.actions.metadata.createdAt.nanos
          in: query
          description: |-
            Non-negative fractions of a second at nanosecond resolution. Negative
             second values with fractions must still have non-negative nanos values
             that count forward in time. Must be from 0 to 999,999,999
             inclusive.
          schema:
            type: integer
            title: nanos
            format: int32
            description: |-
              Non-negative fractions of a second at nanosecond resolution. Negative
               second values with fractions must still have non-negative nanos values
               that count forward in time. Must be from 0 to 999,999,999
               inclusive.
        - name: decisionRequests.actions.metadata.labels.key
          in: query
          schema:
            type: string
            title: key
        - name: decisionRequests.actions.metadata.labels.value
          in: query
          schema:
            type: string
            title: value
        - name: decisionRequests.tokens.id
          in: query
          description: ephemeral id for tracking between request and response
          schema:
            type: string
            title: id
            description: ephemeral id for tracking between request and response
        - name: decisionRequests.tokens.jwt
          in: query
          description: the token
          schema:
            type: string
            title: jwt
            description: the token
        - name: decisionRequests.resourceAttributes.resourceAttributesId
          in: query
          schema:
            type: string
            title: resource_attributes_id
        - name: decisionRequests.resourceAttributes.attributeValueFqns
          in: query
          schema:
            type: array
            items:
              type: string
            title: attribute_value_fqns
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authorization.GetDecisionsByTokenResponse'
  /v1/entitlements:
    post:
      tags:
        - authorization.AuthorizationService
      summary: GetEntitlements
      operationId: authorization.AuthorizationService.GetEntitlements
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authorization.GetEntitlementsRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authorization.GetEntitlementsResponse'
components:
  schemas:
    authorization.DecisionResponse.Decision:
      type: string
      title: Decision
      enum:
        - DECISION_UNSPECIFIED
        - DECISION_DENY
        - DECISION_PERMIT
    authorization.Entity.Category:
      type: string
      title: Category
      enum:
        - CATEGORY_UNSPECIFIED
        - CATEGORY_SUBJECT
        - CATEGORY_ENVIRONMENT
    policy.Action.StandardAction:
      type: string
      title: StandardAction
      enum:
        - STANDARD_ACTION_UNSPECIFIED
        - STANDARD_ACTION_DECRYPT
        - STANDARD_ACTION_TRANSMIT
    authorization.DecisionRequest:
      type: object
      properties:
        actions:
          type: array
          items:
            $ref: '#/components/schemas/policy.Action'
          title: actions
        entityChains:
          type: array
          items:
            $ref: '#/components/schemas/authorization.EntityChain'
          title: entity_chains
        resourceAttributes:
          type: array
          items:
            $ref: '#/components/schemas/authorization.ResourceAttribute'
          title: resource_attributes
      title: DecisionRequest
      additionalProperties: false
      description: |-
        Example Request Get Decisions to answer the question -  Do Bob (represented by entity chain ec1)
        and Alice (represented by entity chain ec2) have TRANSMIT authorization for
        2 resources; resource1 (attr-set-1) defined by attributes foo:bar  resource2 (attr-set-2) defined by attribute foo:bar, color:red ?

        {
        "actions": [
        {
        "standard": "STANDARD_ACTION_TRANSMIT"
        }
        ],
        "entityChains": [
        {
        "id": "ec1",
        "entities": [
        {
        "emailAddress": "bob@example.org"
        }
        ]
        },
        {
        "id": "ec2",
        "entities": [
        {
        "userName": "alice@example.org"
        }
        ]
        }
        ],
        "resourceAttributes": [
        {
        "resourceAttributeId":  "attr-set-1",
        "attributeFqns": [
        "https://www.example.org/attr/foo/value/value1"
        ]
        },
        {
        "resourceAttributeId":  "attr-set-2",
        "attributeFqns": [
        "https://example.net/attr/attr1/value/value1",
        "https://example.net/attr/attr1/value/value2"
        ]
        }
        ]
        }
    authorization.DecisionResponse:
      type: object
      properties:
        entityChainId:
          type: string
          title: entity_chain_id
          description: ephemeral entity chain id from the request
        resourceAttributesId:
          type: string
          title: resource_attributes_id
          description: ephemeral resource attributes id from the request
        action:
          title: action
          description: Action of the decision response
          $ref: '#/components/schemas/policy.Action'
        decision:
          title: decision
          description: The decision response
          $ref: '#/components/schemas/authorization.DecisionResponse.Decision'
        obligations:
          type: array
          items:
            type: string
          title: obligations
          description: optional list of obligations represented in URI format
      title: DecisionResponse
      additionalProperties: false
      description: |-
        Example response for a Decision Request -  Do Bob (represented by entity chain ec1)
        and Alice (represented by entity chain ec2) have TRANSMIT authorization for
        2 resources; resource1 (attr-set-1) defined by attributes foo:bar  resource2 (attr-set-2) defined by attribute foo:bar, color:red ?

        Results:
        - bob has permitted authorization to transmit for a resource defined by attr-set-1 attributes and has a watermark obligation
        - bob has denied authorization to transmit a for a resource defined by attr-set-2 attributes
        - alice has permitted authorization to transmit for a resource defined by attr-set-1 attributes
        - alice has denied authorization to transmit a for a resource defined by attr-set-2 attributes

        {
        "entityChainId":  "ec1",
        "resourceAttributesId":  "attr-set-1",
        "decision":  "DECISION_PERMIT",
        "obligations":  [
        "http://www.example.org/obligation/watermark"
        ]
        },
        {
        "entityChainId":  "ec1",
        "resourceAttributesId":  "attr-set-2",
        "decision":  "DECISION_PERMIT"
        },
        {
        "entityChainId":  "ec2",
        "resourceAttributesId":  "attr-set-1",
        "decision":  "DECISION_PERMIT"
        },
        {
        "entityChainId":  "ec2",
        "resourceAttributesId":  "attr-set-2",
        "decision":  "DECISION_DENY"
        }
    authorization.Entity:
      type: object
      oneOf:
        - properties:
            claims:
              title: claims
              $ref: '#/components/schemas/google.protobuf.Any'
          title: claims
          required:
            - claims
        - properties:
            clientId:
              type: string
              title: client_id
          title: client_id
          required:
            - clientId
        - properties:
            custom:
              title: custom
              $ref: '#/components/schemas/authorization.EntityCustom'
          title: custom
          required:
            - custom
        - properties:
            emailAddress:
              type: string
              title: email_address
              description: one of the entity options must be set
          title: email_address
          required:
            - emailAddress
        - properties:
            remoteClaimsUrl:
              type: string
              title: remote_claims_url
          title: remote_claims_url
          required:
            - remoteClaimsUrl
        - properties:
            userName:
              type: string
              title: user_name
          title: user_name
          required:
            - userName
        - properties:
            uuid:
              type: string
              title: uuid
          title: uuid
          required:
            - uuid
      properties:
        id:
          type: string
          title: id
          description: ephemeral id for tracking between request and response
        category:
          title: category
          $ref: '#/components/schemas/authorization.Entity.Category'
      title: Entity
      additionalProperties: false
      description: PE (Person Entity) or NPE (Non-Person Entity)
    authorization.EntityChain:
      type: object
      properties:
        id:
          type: string
          title: id
          description: ephemeral id for tracking between request and response
        entities:
          type: array
          items:
            $ref: '#/components/schemas/authorization.Entity'
          title: entities
      title: EntityChain
      additionalProperties: false
      description: A set of related PE and NPE
    authorization.EntityCustom:
      type: object
      properties:
        extension:
          title: extension
          $ref: '#/components/schemas/google.protobuf.Any'
      title: EntityCustom
      additionalProperties: false
      description: Entity type for custom entities beyond the standard types
    authorization.EntityEntitlements:
      type: object
      properties:
        entityId:
          type: string
          title: entity_id
        attributeValueFqns:
          type: array
          items:
            type: string
          title: attribute_value_fqns
      title: EntityEntitlements
      additionalProperties: false
    authorization.GetDecisionsByTokenRequest:
      type: object
      properties:
        decisionRequests:
          type: array
          items:
            $ref: '#/components/schemas/authorization.TokenDecisionRequest'
          title: decision_requests
      title: GetDecisionsByTokenRequest
      additionalProperties: false
    authorization.GetDecisionsByTokenResponse:
      type: object
      properties:
        decisionResponses:
          type: array
          items:
            $ref: '#/components/schemas/authorization.DecisionResponse'
          title: decision_responses
      title: GetDecisionsByTokenResponse
      additionalProperties: false
    authorization.GetDecisionsRequest:
      type: object
      properties:
        decisionRequests:
          type: array
          items:
            $ref: '#/components/schemas/authorization.DecisionRequest'
          title: decision_requests
      title: GetDecisionsRequest
      additionalProperties: false
    authorization.GetDecisionsResponse:
      type: object
      properties:
        decisionResponses:
          type: array
          items:
            $ref: '#/components/schemas/authorization.DecisionResponse'
          title: decision_responses
      title: GetDecisionsResponse
      additionalProperties: false
    authorization.GetEntitlementsRequest:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/authorization.Entity'
          title: entities
          description: list of requested entities
        scope:
          title: scope
          description: optional attribute fqn as a scope
          nullable: true
          $ref: '#/components/schemas/authorization.ResourceAttribute'
        withComprehensiveHierarchy:
          type: boolean
          title: with_comprehensive_hierarchy
          description: optional parameter to return a full list of entitlements - returns lower hierarchy attributes
          nullable: true
      title: GetEntitlementsRequest
      additionalProperties: false
      description: |-
        Request to get entitlements for one or more entities for an optional attribute scope

        Example: Get entitlements for bob and alice (both represented using an email address

        {
        "entities": [
        {
        "id": "e1",
        "emailAddress": "bob@example.org"
        },
        {
        "id": "e2",
        "emailAddress": "alice@example.org"
        }
        ],
        "scope": {
        "attributeFqns": [
        "https://example.net/attr/attr1/value/value1",
        "https://example.net/attr/attr1/value/value2"
        ]
        }
        }
    authorization.GetEntitlementsResponse:
      type: object
      properties:
        entitlements:
          type: array
          items:
            $ref: '#/components/schemas/authorization.EntityEntitlements'
          title: entitlements
      title: GetEntitlementsResponse
      additionalProperties: false
      description: |-
        Example Response for a request of : Get entitlements for bob and alice (both represented using an email address

        {
        "entitlements":  [
        {
        "entityId":  "e1",
        "attributeValueReferences":  [
        {
        "attributeFqn":  "http://www.example.org/attr/foo/value/bar"
        }
        ]
        },
        {
        "entityId":  "e2",
        "attributeValueReferences":  [
        {
        "attributeFqn":  "http://www.example.org/attr/color/value/red"
        }
        ]
        }
        ]
        }
    authorization.ResourceAttribute:
      type: object
      properties:
        resourceAttributesId:
          type: string
          title: resource_attributes_id
        attributeValueFqns:
          type: array
          items:
            type: string
          title: attribute_value_fqns
      title: ResourceAttribute
      additionalProperties: false
      description: A logical bucket of attributes belonging to a "Resource"
    authorization.Token:
      type: object
      properties:
        id:
          type: string
          title: id
          description: ephemeral id for tracking between request and response
        jwt:
          type: string
          title: jwt
          description: the token
      title: Token
      additionalProperties: false
    authorization.TokenDecisionRequest:
      type: object
      properties:
        actions:
          type: array
          items:
            $ref: '#/components/schemas/policy.Action'
          title: actions
        tokens:
          type: array
          items:
            $ref: '#/components/schemas/authorization.Token'
          title: tokens
        resourceAttributes:
          type: array
          items:
            $ref: '#/components/schemas/authorization.ResourceAttribute'
          title: resource_attributes
      title: TokenDecisionRequest
      additionalProperties: false
      description: |-
        Example Request Get Decisions by Token to answer the question -  Do Bob and client1 (represented by token tok1)
        and Alice and client2 (represented by token tok2) have TRANSMIT authorization for
        2 resources; resource1 (attr-set-1) defined by attributes foo:bar  resource2 (attr-set-2) defined by attribute foo:bar, color:red ?

        {
        "actions": [
        {
        "standard": "STANDARD_ACTION_TRANSMIT"
        }
        ],
        "tokens": [
        {
        "id": "tok1",
        "jwt": ....
        },
        {
        "id": "tok2",
        "jwt": .....
        }
        ],
        "resourceAttributes": [
        {
        "attributeFqns": [
        "https://www.example.org/attr/foo/value/value1"
        ]
        },
        {
        "attributeFqns": [
        "https://example.net/attr/attr1/value/value1",
        "https://example.net/attr/attr1/value/value2"
        ]
        }
        ]
        }
    common.Metadata:
      type: object
      properties:
        createdAt:
          title: created_at
          description: created_at set by server (entity who created will recorded in an audit event)
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        updatedAt:
          title: updated_at
          description: updated_at set by server (entity who updated will recorded in an audit event)
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        labels:
          type: object
          title: labels
          additionalProperties:
            type: string
            title: value
          description: optional short description
      title: Metadata
      additionalProperties: false
      description: Struct to uniquely identify a resource with optional additional metadata
    common.Metadata.LabelsEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          type: string
          title: value
      title: LabelsEntry
      additionalProperties: false
    google.protobuf.Any:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
          format: binary
        debug:
          type: object
          additionalProperties: true
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
    google.protobuf.Timestamp:
      type: string
      format: date-time
      description: |-
        A Timestamp represents a point in time independent of any time zone or local
         calendar, encoded as a count of seconds and fractions of seconds at
         nanosecond resolution. The count is relative to an epoch at UTC midnight on
         January 1, 1970, in the proleptic Gregorian calendar which extends the
         Gregorian calendar backwards to year one.

         All minutes are 60 seconds long. Leap seconds are "smeared" so that no leap
         second table is needed for interpretation, using a [24-hour linear
         smear](https://developers.google.com/time/smear).

         The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By
         restricting to that range, we ensure that we can convert to and from [RFC
         3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.

         # Examples

         Example 1: Compute Timestamp from POSIX `time()`.

             Timestamp timestamp;
             timestamp.set_seconds(time(NULL));
             timestamp.set_nanos(0);

         Example 2: Compute Timestamp from POSIX `gettimeofday()`.

             struct timeval tv;
             gettimeofday(&tv, NULL);

             Timestamp timestamp;
             timestamp.set_seconds(tv.tv_sec);
             timestamp.set_nanos(tv.tv_usec * 1000);

         Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.

             FILETIME ft;
             GetSystemTimeAsFileTime(&ft);
             UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;

             // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z
             // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.
             Timestamp timestamp;
             timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));
             timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));

         Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.

             long millis = System.currentTimeMillis();

             Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)
                 .setNanos((int) ((millis % 1000) * 1000000)).build();

         Example 5: Compute Timestamp from Java `Instant.now()`.

             Instant now = Instant.now();

             Timestamp timestamp =
                 Timestamp.newBuilder().setSeconds(now.getEpochSecond())
                     .setNanos(now.getNano()).build();

         Example 6: Compute Timestamp from current time in Python.

             timestamp = Timestamp()
             timestamp.GetCurrentTime()

         # JSON Mapping

         In JSON format, the Timestamp type is encoded as a string in the
         [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the
         format is "{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z"
         where {year} is always expressed using four digits while {month}, {day},
         {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional
         seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),
         are optional. The "Z" suffix indicates the timezone ("UTC"); the timezone
         is required. A proto3 JSON serializer should always use UTC (as indicated by
         "Z") when printing the Timestamp type and a proto3 JSON parser should be
         able to accept both UTC and other timezones (as indicated by an offset).

         For example, "2017-01-15T01:30:15.01Z" encodes 15.01 seconds past
         01:30 UTC on January 15, 2017.

         In JavaScript, one can convert a Date object to this format using the
         standard
         [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)
         method. In Python, a standard `datetime.datetime` object can be converted
         to this format using
         [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with
         the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use
         the Joda Time's [`ISODateTimeFormat.dateTime()`](
         http://joda-time.sourceforge.net/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime()
         ) to obtain a formatter capable of generating timestamps in this format.
    policy.Action:
      type: object
      oneOf:
        - properties:
            custom:
              type: string
              title: custom
              description: Deprecated
          title: custom
          required:
            - custom
        - properties:
            standard:
              title: standard
              description: Deprecated
              $ref: '#/components/schemas/policy.Action.StandardAction'
          title: standard
          required:
            - standard
      properties:
        id:
          type: string
          title: id
          description: Generated uuid in database
        name:
          type: string
          title: name
        metadata:
          title: metadata
          $ref: '#/components/schemas/common.Metadata'
      title: Action
      additionalProperties: false
      description: An action an entity can take
    connect-protocol-version:
      type: number
      title: Connect-Protocol-Version
      enum:
        - 1
      description: Define the version of the Connect protocol
      const: 1
    connect-timeout-header:
      type: number
      title: Connect-Timeout-Ms
      description: Define the timeout, in ms
    connect.error:
      type: object
      properties:
        code:
          type: string
          examples:
            - not_found
          enum:
            - canceled
            - unknown
            - invalid_argument
            - deadline_exceeded
            - not_found
            - already_exists
            - permission_denied
            - resource_exhausted
            - failed_precondition
            - aborted
            - out_of_range
            - unimplemented
            - internal
            - unavailable
            - data_loss
            - unauthenticated
          description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
        detail:
          $ref: '#/components/schemas/google.protobuf.Any'
      title: Connect Error
      additionalProperties: true
      description: 'Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation'
security: []
tags:
  - name: authorization.AuthorizationService
