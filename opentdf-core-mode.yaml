# configures the platform to startup without a KAS instances, without a built-in ERS instance, and without endpoint authentication
# build off of this config file if you are running your ERS and KAS instances seperately or if you only need the policy features
mode: core
sdk_config:
  entityresolution:
    endpoint: http://localhost:8181
    plaintext: true
  client_id: opentdf
  client_secret: secret
logger:
  level: debug
  type: text
  output: stdout
# DB and Server configurations are defaulted for local development
# db:
#   host: localhost
#   port: 5432
#   user: postgres
#   password: changeme
server:
  auth:
    enabled: false
    enforceDPoP: false
    audience: 'http://localhost:8080'
    issuer: http://localhost:8888/auth/realms/tdf
  cors:
    enabled: false
    # "*" to allow any origin or a specific domain like "https://yourdomain.com"
    allowedorigins:
      - '*'
    # List of methods. Examples: "GET,POST,PUT"
    allowedmethods:
      - GET
      - POST
      - PATCH
      - PUT
      - DELETE
      - OPTIONS
    # List of headers that are allowed in a request
    allowedheaders:
      - ACCEPT
      - Authorization
      - Connect-Protocol-Version
      - Content-Type
      - X-CSRF-Token
    # List of response headers that browsers are allowed to access
    exposedheaders:
      - Link
    # Sets whether credentials are included in the CORS request
    allowcredentials: true
    # Sets the maximum age (in seconds) of a specific CORS preflight request
    maxage: 3600
  grpc:
    reflectionEnabled: true # Default is false
  port: 8383