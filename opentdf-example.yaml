logger:
  level: debug
  type: text
  output: stdout
# DB and Server configurations are defaulted for local development
db:
  host: opentdfdb
#   port: 5432
#   user: postgres
#   password: changeme
services:
  kas:
    enabled: true
  policy:
    enabled: true
  authorization:
    enabled: true
    url: http://keycloak:8888
    client: "tdf-entity-resolution"
    secret: "secret"
    realm: "opentdf"
    legacy: true
server:
  auth:
    enabled: true
    enforceDPoP: false
    audience: "http://localhost:8080"
    issuer: http://keycloak:8888/auth/realms/opentdf
    policy:
      ## Default policy for all requests
      default: #"role:readonly"
      ## Dot notation is used to access nested claims (i.e. realm_access.roles)
      claim: # realm_access.roles
      ## Maps the external role to the opentdf role
      ## Note: left side is used in the policy, right side is the external role
      map:
      #  readonly: opentdf-readonly
      #  admin: opentdf-admin
      #  org-admin: opentdf-org-admin

      ## Custom policy (see examples https://github.com/casbin/casbin/tree/master/examples)
      csv: #|
      #  p, role:org-admin, policy:attributes, *, *, allow
      #  p, role:org-admin, policy:subject-mappings, *, *, allow
      #  p, role:org-admin, policy:resource-mappings, *, *, allow
      #  p, role:org-admin, policy:kas-registry, *, *, allow
      ## Custom model (see https://casbin.org/docs/syntax-for-models/)
      model: #|
      #  [request_definition]
      #  r = sub, res, act, obj
      #
      #  [policy_definition]
      #  p = sub, res, act, obj, eft
      #
      #  [role_definition]
      #  g = _, _
      #
      #  [policy_effect]
      #  e = some(where (p.eft == allow)) && !some(where (p.eft == deny))
      #
      #  [matchers]
      #  m = g(r.sub, p.sub) && globOrRegexMatch(r.res, p.res) && globOrRegexMatch(r.act, p.act) && globOrRegexMatch(r.obj, p.obj)

  grpc:
    reflectionEnabled: true # Default is false
  cryptoProvider:
    hsm:
      enabled: false
      pin:
    standard:
      rsa:
        123:
          privateKeyPath: /keys/kas-private.pem
          publicKeyPath: /keys/kas-cert.pem
        456:
          privateKeyPath: /keys/kas-private.pem
          publicKeyPath: /keys/kas-cert.pem
      ec:
        123:
          privateKeyPath: /keys/kas-ec-private.pem
          publicKeyPath: /keys/kas-ec-cert.pem
  port: 8080
opa:
  embedded: true # Only for local development
