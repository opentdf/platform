syntax = "proto3";

package authorization.v1;

import "google/api/annotations.proto";
import "google/protobuf/any.proto";
import "attributes/v1/attributes.proto";

message Entity {
  string id = 1;
  oneof entity_type {
    string email_address = 2;
    string user_name = 3;
    string remote_claims_url = 4;
    string jwt = 5;
    google.protobuf.Any claims = 6;
    CustomExtension custom = 7;
  }
}

message CustomExtension {
  google.protobuf.Any extension = 1;
}

message EntityChain {
  string id = 1;
  repeated Entity entity = 2;
}

message Action {
  enum Type {
    TYPE_UNSPECIFIED = 0;
    TYPE_CREATE = 1;
    TYPE_READ = 2;
    TYPE_UPDATE = 3;
    TYPE_DELETE = 4;
    TYPE_WRITE = 5;
    TYPE_EXECUTE = 6;
    TYPE_COPY = 7;
    TYPE_MOVE = 9;
    TYPE_RENAME = 10;
    TYPE_SHARE = 11;
    TYPE_DOWNLOAD = 12;
    TYPE_UPLOAD = 13;
    TYPE_ARCHIVE = 14;
    TYPE_EXPORT = 15;
    TYPE_IMPORT = 16;
    TYPE_LOCK = 17;
    TYPE_UNLOCK = 18;
    TYPE_PRINT = 19;
    TYPE_BACKUP = 20;
    TYPE_RESTORE = 21;
    TYPE_ENCRYPT = 22;
    TYPE_DECRYPT = 23;
    TYPE_AUDIT = 24;
    TYPE_TRANSMIT = 25;
  }
  Type type = 1;
  map<string, string> extension = 2;
}

message Actions {
  repeated Action action = 1;
}

message DecisionRequest {
  Actions actions = 1;
  EntityChain entity_chain = 2;
  attributes.v1.AttributeUrlSet attribute_url_set = 3;
}

message DecisionResponse {
  enum Decision {
    DECISION_UNSPECIFIED = 0;
    DECISION_DENY = 1;
    DECISION_PERMIT = 2;
  }
  string entity_chain_id = 1;
  attributes.v1.AttributeUrlSet attribute_url_set = 2;
  Decision decision = 3;
  repeated string obligations = 4;
}

message GetDecisionsRequest {
  repeated DecisionResponse decision_responses = 1;
}

message GetDecisionsResponse {
  repeated DecisionResponse decision_responses = 1;
}

message GetEntitlementsRequest {
  repeated EntityChain entity_chain = 1;
  optional attributes.v1.AttributeUrlSet attribute_url_set = 2;
}

message GetEntitlementsResponse {
  repeated DecisionResponse decision_responses = 1;
}

service AuthorizationService {
  rpc GetDecisions(GetDecisionsRequest) returns (GetDecisionsResponse) {
    option (google.api.http) = {
      post: "/v1/authorization"
    };
  }
  rpc GetEntitlements(GetEntitlementsRequest) returns (GetEntitlementsResponse) {
    option (google.api.http) = {
      post: "/v1/entitlements"
    };
  }
}
