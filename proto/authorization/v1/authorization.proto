syntax = "proto3";

package authorization.v1;
option go_package = "github.com/opentdf/opentdf-v2-poc/gen/authorization/v1";

import "google/api/annotations.proto";
import "google/protobuf/any.proto";

message Entity {
  string id = 1;
  oneof entity_type {
    string email_address = 2;
    string user_name = 3;
    string remote_claims_url = 4;
    string jwt = 5;
    google.protobuf.Any claims = 6;
    CustomExtension custom = 7;
  }
}

message CustomExtension {
  google.protobuf.Any extension = 1;
}

message EntityChain {
  string id = 1;
  repeated Entity entity = 2;
}

message Attributes {
  repeated string attribute = 1;
}

message Resource {
  string id = 1;
  Attributes attributes = 3;
}

message Resources {
  repeated Resource resources = 1;
}

message Action {
  enum Type {
    OTHER = 0;
    CREATE = 1;
    READ = 2;
    UPDATE = 3;
    DELETE = 4;
    WRITE = 5;
    EXECUTE = 6;
    COPY = 7;
    MOVE = 9;
    RENAME = 10;
    SHARE = 11;
    DOWNLOAD = 12;
    UPLOAD = 13;
    ARCHIVE = 14;
    EXPORT = 15;
    IMPORT = 16;
    LOCK = 17;
    UNLOCK = 18;
    PRINT = 19;
    BACKUP = 20;
    RESTORE = 21;
    ENCRYPT = 22;
    DECRYPT = 23;
    AUDIT = 24;
    TRANSMIT = 25;
  }
  Type type = 1;
  map<string, string> extension = 2;
}

message Actions {
  repeated Action action = 1;
}

message DecisionRequest {
  Actions actions = 1;
  EntityChain entity_chain = 2;
  Resources resources = 3;
}

message DecisionResponse {
  enum Decision {
    DENY = 0;
    PERMIT = 1;
  }
  string entity_chain_id = 1;
  string resource_id = 2;
  Decision decision = 3;
  repeated string obligations = 4;
}

message AuthorizationDecisionResponse {
  repeated DecisionResponse decision_responses = 1;
}

service AuthorizationService {
  rpc IsAuthorized(DecisionRequest) returns (AuthorizationDecisionResponse) {
    option (google.api.http) = {
      post: "/v1/authorization"
    };
  }
}
