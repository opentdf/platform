syntax = "proto3";

package authorization;
option go_package = "github.com/opentdf/backend-go/gen/authorization";

import "google/api/annotations.proto";

message Entity {
  enum Type {
    OTHER = 0;
    EMAIL = 1;
    USERNAME = 2;
    REMOTE_CLAIMS = 3;
    CLAIMS = 4;
    JWT = 5;
  }
  string id = 1;
  Type type = 2;
  map<string, string> extension = 3;
}

// EntityChain
message Entities {
  repeated Entity entity = 1;
}

message Attributes {
  repeated string attribute = 1;
}

message Resource {
  string id = 1;
  Attributes attributes = 3;
}

message Resources {
  repeated Resource resources = 1;
}

message Action {
  enum Type {
    OTHER = 0;
    CREATE = 1;
    READ = 2;
    UPDATE = 3;
    DELETE = 4;
    WRITE = 5;
    EXECUTE = 6;
    COPY = 7;
    MOVE = 9;
    RENAME = 10;
    SHARE = 11;
    DOWNLOAD = 12;
    UPLOAD = 13;
    ARCHIVE = 14;
    EXPORT = 15;
    IMPORT = 16;
    LOCK = 17;
    UNLOCK = 18;
    PRINT = 19;
    BACKUP = 20;
    RESTORE = 21;
    ENCRYPT = 22;
    DECRYPT = 23;
    AUDIT = 24;
    TRANSMIT = 25;
  }
  Type type = 1;
  map<string, string> extension = 2;
}

message Actions {
  repeated Action action = 1;
}

message IsAuthorizedRequest {
  Actions actions = 1;
  Entity entities = 2;
  Resources resources = 3;
}

message Decision {
  enum Type {
    DENY = 0;
    PERMIT = 1;
  }
  string entityId = 1;
  string resourceId = 2;
  Type type = 3;
  repeated string obligations = 4;
}

message IsAuthorizedResponse {
  repeated Decision decisions = 1;
}

service AuthorizationService {
  rpc IsAuthorized(IsAuthorizedRequest) returns (IsAuthorizedResponse) {
    option (google.api.http) = {
      post: "/authorization"
    };
  }
}
