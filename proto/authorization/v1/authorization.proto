syntax = "proto3";

package authorization.v1;

import "google/api/annotations.proto";
import "google/protobuf/any.proto";
import "attributes/v1/attributes.proto";

// PE (Person Entity) or NPE (Non-Person Entity)
message Entity {
  string id = 1;
  // Standard entity types supported by the platform
  oneof entity_type {
    string email_address = 2;
    string user_name = 3;
    string remote_claims_url = 4;
    string jwt = 5;
    google.protobuf.Any claims = 6;
    EntityCustom custom = 7;
  }
}

// Entity type for custom entities beyond the standard types
message EntityCustom {
  google.protobuf.Any extension = 1;
}

// A set of related PE and NPE
message EntityChain {
  string id = 1;
  repeated Entity entity = 2;
}

// An action an entity can take
message Action {
  // Standard actions supported by the platform
  enum StandardAction {
    STANDARD_ACTION_UNSPECIFIED = 0;
    STANDARD_ACTION_CREATE = 1;
    STANDARD_ACTION_READ = 2;
    STANDARD_ACTION_UPDATE = 3;
    STANDARD_ACTION_DELETE = 4;
    STANDARD_ACTION_WRITE = 5;
    STANDARD_ACTION_EXECUTE = 6;
    STANDARD_ACTION_COPY = 7;
    STANDARD_ACTION_MOVE = 9;
    STANDARD_ACTION_RENAME = 10;
    STANDARD_ACTION_SHARE = 11;
    STANDARD_ACTION_DOWNLOAD = 12;
    STANDARD_ACTION_UPLOAD = 13;
    STANDARD_ACTION_ARCHIVE = 14;
    STANDARD_ACTION_EXPORT = 15;
    STANDARD_ACTION_IMPORT = 16;
    STANDARD_ACTION_LOCK = 17;
    STANDARD_ACTION_UNLOCK = 18;
    STANDARD_ACTION_PRINT = 19;
    STANDARD_ACTION_BACKUP = 20;
    STANDARD_ACTION_RESTORE = 21;
    STANDARD_ACTION_ENCRYPT = 22;
    STANDARD_ACTION_DECRYPT = 23;
    STANDARD_ACTION_AUDIT = 24;
    STANDARD_ACTION_TRANSMIT = 25;
  }
  StandardAction standard = 1;
  optional string custom = 2;
}

message Actions {
  repeated Action standard_action = 1;
}

message DecisionRequest {
  Actions actions = 1;
  EntityChain entity_chain = 2;
  attributes.v1.AttributeUrlSet attribute_url_set = 3;
}

message DecisionResponse {
  enum Decision {
    DECISION_UNSPECIFIED = 0;
    DECISION_DENY = 1;
    DECISION_PERMIT = 2;
  }
  string entity_chain_id = 1;
  attributes.v1.AttributeUrlSet attribute_url_set = 2;
  Decision decision = 3;
  repeated string obligations = 4;
}

message GetDecisionsRequest {
  repeated DecisionResponse decision_responses = 1;
}

message GetDecisionsResponse {
  repeated DecisionResponse decision_responses = 1;
}

message GetEntitlementsRequest {
  repeated EntityChain entity_chain = 1;
  optional attributes.v1.AttributeUrlSet attribute_url_set = 2;
}

message GetEntitlementsResponse {
  repeated DecisionResponse decision_responses = 1;
}

service AuthorizationService {
  rpc GetDecisions(GetDecisionsRequest) returns (GetDecisionsResponse) {
    option (google.api.http) = {
      post: "/v1/authorization"
    };
  }
  rpc GetEntitlements(GetEntitlementsRequest)
      returns (GetEntitlementsResponse) {
    option (google.api.http) = {
      post: "/v1/entitlements"
    };
  }
}
