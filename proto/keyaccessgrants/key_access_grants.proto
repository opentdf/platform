syntax = "proto3";

package keyaccessgrants;

import "buf/validate/validate.proto";
import "common/common.proto";
import "google/api/annotations.proto";

/*
   Descriptor for a KAS
*/
message KeyAccessServer {
  common.PolicyMetadata metadata = 1;

  string id = 2;

  //Kas Url
  string url = 3 [
    (buf.validate.field).required = true,
    (buf.validate.field).cel = {
      id: "fqn_format",
      message: "FQN must start with a valid URL (e.g., 'https://demo.com/') followed by additional segments. Each segment must start and end with an alphanumeric character, can contain hyphens, alphanumeric characters, and slashes.",
      expression: "this.matches('^https://[a-zA-Z0-9]([a-zA-Z0-9\\\\-]{0,61}[a-zA-Z0-9])?(\\\\.[a-zA-Z0-9]([a-zA-Z0-9\\\\-]{0,61}[a-zA-Z0-9])?)*(/.*)?$')"
    }
  ];

  //public key - optional since can also be retrieved via url
  string public_key = 4;
}

message GetKeyAccessGrantRequest {
  int32 id = 1 [(buf.validate.field).required = true];
}
message GetKeyAccessGrantResponse {
  KeyAccessGrants grants = 1;
}

message ListKeyAccessGrantsRequest {}
message ListKeyAccessGrantsResponse {
  repeated KeyAccessGrants grants = 1;
}

message CreateKeyAccessGrantsRequest {
  KeyAccessGrants grants = 1 [(buf.validate.field).required = true];
}
message CreateKeyAccessGrantsResponse {}

message UpdateKeyAccessGrantsRequest {
  int32 id = 1 [(buf.validate.field).required = true];
  KeyAccessGrants grants = 2 [(buf.validate.field).required = true];
}
message UpdateKeyAccessGrantsResponse {}

message DeleteKeyAccessGrantsRequest {
  int32 id = 1 [(buf.validate.field).required = true];
}
message DeleteKeyAccessGrantsResponse {}

service KeyAccessGrantsService {
  rpc ListKeyAccessGrants(ListKeyAccessGrantsRequest) returns (ListKeyAccessGrantsResponse) {
    option (google.api.http) = {get: "/v1/grants"};
  }
  rpc GetKeyAccessGrant(GetKeyAccessGrantRequest) returns (GetKeyAccessGrantResponse) {
    option (google.api.http) = {get: "/v1/grants/{id}"};
  }

  rpc CreateKeyAccessGrants(CreateKeyAccessGrantsRequest) returns (CreateKeyAccessGrantsResponse) {
    option (google.api.http) = {
      post: "/v1/grants"
      body: "grants"
    };
  }
  rpc UpdateKeyAccessGrants(UpdateKeyAccessGrantsRequest) returns (UpdateKeyAccessGrantsResponse) {
    option (google.api.http) = {
      put: "/v1/grants/{id}"
      body: "grants"
    };
  }

  rpc DeleteKeyAccessGrants(DeleteKeyAccessGrantsRequest) returns (DeleteKeyAccessGrantsResponse) {
    option (google.api.http) = {delete: "/v1/grants/{id}"};
  }
}
