// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: wellknownConfiguration/wellknownConfiguration.proto

package wellknownConfiguration

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	structpb "google.golang.org/protobuf/types/known/structpb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	WellKnownService_GetWellKnownConfiguration_FullMethodName = "/wellknown_configuration.WellKnownService/GetWellKnownConfiguration"
)

// WellKnownServiceClient is the client API for WellKnownService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type WellKnownServiceClient interface {
	GetWellKnownConfiguration(ctx context.Context, in *WellKnownConfig, opts ...grpc.CallOption) (*structpb.Struct, error)
}

type wellKnownServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewWellKnownServiceClient(cc grpc.ClientConnInterface) WellKnownServiceClient {
	return &wellKnownServiceClient{cc}
}

func (c *wellKnownServiceClient) GetWellKnownConfiguration(ctx context.Context, in *WellKnownConfig, opts ...grpc.CallOption) (*structpb.Struct, error) {
	out := new(structpb.Struct)
	err := c.cc.Invoke(ctx, WellKnownService_GetWellKnownConfiguration_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WellKnownServiceServer is the server API for WellKnownService service.
// All implementations must embed UnimplementedWellKnownServiceServer
// for forward compatibility
type WellKnownServiceServer interface {
	GetWellKnownConfiguration(context.Context, *WellKnownConfig) (*structpb.Struct, error)
	mustEmbedUnimplementedWellKnownServiceServer()
}

// UnimplementedWellKnownServiceServer must be embedded to have forward compatible implementations.
type UnimplementedWellKnownServiceServer struct {
}

func (UnimplementedWellKnownServiceServer) GetWellKnownConfiguration(context.Context, *WellKnownConfig) (*structpb.Struct, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWellKnownConfiguration not implemented")
}
func (UnimplementedWellKnownServiceServer) mustEmbedUnimplementedWellKnownServiceServer() {}

// UnsafeWellKnownServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to WellKnownServiceServer will
// result in compilation errors.
type UnsafeWellKnownServiceServer interface {
	mustEmbedUnimplementedWellKnownServiceServer()
}

func RegisterWellKnownServiceServer(s grpc.ServiceRegistrar, srv WellKnownServiceServer) {
	s.RegisterService(&WellKnownService_ServiceDesc, srv)
}

func _WellKnownService_GetWellKnownConfiguration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WellKnownConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WellKnownServiceServer).GetWellKnownConfiguration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: WellKnownService_GetWellKnownConfiguration_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WellKnownServiceServer).GetWellKnownConfiguration(ctx, req.(*WellKnownConfig))
	}
	return interceptor(ctx, in, info, handler)
}

// WellKnownService_ServiceDesc is the grpc.ServiceDesc for WellKnownService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var WellKnownService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "wellknown_configuration.WellKnownService",
	HandlerType: (*WellKnownServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetWellKnownConfiguration",
			Handler:    _WellKnownService_GetWellKnownConfiguration_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "wellknownConfiguration/wellknownConfiguration.proto",
}
