syntax = "proto3";

package entityresolution.v2;

import "buf/validate/validate.proto";
import "entity/entity.proto";
import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";

message EntityRepresentation {
  // ephemeral entity id from the request
  string original_id = 1;
  repeated google.protobuf.Struct additional_props = 2;
}

// Resolve a set of entities to their representations.
message ResolveEntitiesRequest {
  repeated entity.Entity entities = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).repeated = {min_items: 1}
  ];
}
message ResolveEntitiesResponse {
  repeated EntityRepresentation entity_representations = 1;
}

message EntityNotFoundError {
  int32 code = 1;
  string message = 2;
  repeated google.protobuf.Any details = 3;
  string entity = 4;
}

// Create an entity chain for each token (JWT) in the request.
message CreateEntityChainsFromTokensRequest {
  repeated entity.Token tokens = 1;
}

message CreateEntityChainsFromTokensResponse {
  repeated entity.EntityChain entity_chains = 1;
}

service EntityResolutionService {
  rpc ResolveEntities(ResolveEntitiesRequest) returns (ResolveEntitiesResponse) {}
  rpc CreateEntityChainsFromTokens(CreateEntityChainsFromTokensRequest) returns (CreateEntityChainsFromTokensResponse) {}
}
