// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: copyfrom.go

package db

import (
	"context"
)

// iteratorForcreateRegisteredResourceActionAttributeValue implements pgx.CopyFromSource.
type iteratorForcreateRegisteredResourceActionAttributeValue struct {
	rows                 []createRegisteredResourceActionAttributeValueParams
	skippedFirstNextCall bool
}

func (r *iteratorForcreateRegisteredResourceActionAttributeValue) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForcreateRegisteredResourceActionAttributeValue) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].RegisteredResourceValueID,
		r.rows[0].ActionID,
		r.rows[0].AttributeValueID,
	}, nil
}

func (r iteratorForcreateRegisteredResourceActionAttributeValue) Err() error {
	return nil
}

// createRegisteredResourceActionAttributeValue
//
//	INSERT INTO registered_resource_action_attribute_values (registered_resource_value_id, action_id, attribute_value_id)
//	VALUES ($1, $2, $3)
func (q *Queries) createRegisteredResourceActionAttributeValue(ctx context.Context, arg []createRegisteredResourceActionAttributeValueParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"registered_resource_action_attribute_values"}, []string{"registered_resource_value_id", "action_id", "attribute_value_id"}, &iteratorForcreateRegisteredResourceActionAttributeValue{rows: arg})
}
