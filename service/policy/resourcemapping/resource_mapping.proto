syntax = "proto3";

package policy.resourcemapping;

import "buf/validate/validate.proto";
import "google/api/annotations.proto";

import "common/common.proto";
import "policy/objects.proto";

/*
   Resource Mapping Groups
*/

message ListResourceMappingGroupsRequest {}

message ListResourceMappingGroupsResponse {
  repeated ResourceMappingGroup resource_mapping_groups = 1;
}

message GetResourceMappingGroupRequest {
  string id = 1 [(buf.validate.field).required = true];
}

message GetResourceMappingGroupResponse {
  ResourceMappingGroup resource_mapping_group = 1;
}

message GetResourceMappingGroupByFQNRequest {
  string fqn = 1 [(buf.validate.field).required = true];
}

message GetResourceMappingGroupByFQNResponse {
  ResourceMappingGroup resource_mapping_group = 1;
}

message CreateResourceMappingGroupRequest {
  string namespace_id = 1 [(buf.validate.field).required = true];
  string name = 2 [(buf.validate.field).required = true];
}

message CreateResourceMappingGroupResponse {
  ResourceMappingGroup resource_mapping_group = 1;
}

message UpdateResourceMappingGroupRequest {
  string id = 1 [(buf.validate.field).required = true];
  string namespace_id = 2;
  string name = 3;
}

message UpdateResourceMappingGroupResponse {
  ResourceMappingGroup resource_mapping_group = 1;
}

message DeleteResourceMappingGroupRequest {
  string id = 1 [(buf.validate.field).required = true];
}

message DeleteResourceMappingGroupResponse {
  ResourceMappingGroup resource_mapping_group = 1;
}

/*
   Resource Mappings
*/

message ListResourceMappingsRequest {}

message ListResourceMappingsResponse {
  repeated policy.ResourceMapping resource_mappings = 1;
}

message GetResourceMappingRequest {
  string id = 1 [(buf.validate.field).required = true];
}

message GetResourceMappingResponse {
  policy.ResourceMapping resource_mapping = 1;
}

/*
 ### Request

     grpcurl -plaintext -d @ localhost:8080 policy.resourcemapping.ResourceMappingService/CreateResourceMapping <<EOM
       {
         "mapping": {
           "name": "Classification",
           "attribute_value_id": "12345678-1234-1234-1234-123456789012",
           "terms": ["CONFIDENTIAL", "CONTROLLED UNCLASSIFIED", "OFFICIAL-SENSITIVE", "CUI", "C"]
         }
       }
     EOM

   ### Response

     {
       "mapping": {
         "metadata": {
           "id": "12345678-1234-1234-1234-123456789012",
           "created_at": "2020-01-01T00:00:00Z",
           "updated_at": "2020-01-01T00:00:00Z"
         },
         "name": "Classification",
         "attribute_value_id": "12345678-1234-1234-1234-123456789012",
         "terms": ["CONFIDENTIAL", "CONTROLLED UNCLASSIFIED", "OFFICIAL-SENSITIVE", "CUI", "C"]
       }
     }

*/
message CreateResourceMappingRequest {
  // Required
  string attribute_value_id = 1 [(buf.validate.field).required = true];

  repeated string terms = 2 [(buf.validate.field).required = true];

  // Optional
  string group_id = 3;

  common.MetadataMutable metadata = 100;
}
message CreateResourceMappingResponse {
  ResourceMapping resource_mapping = 1;
}

message UpdateResourceMappingRequest {
  // Required
  string id = 1 [(buf.validate.field).required = true];

  // Optional
  string attribute_value_id = 4;

  repeated string terms = 5;

  string group_id = 6;

  // Common Metadata
  common.MetadataMutable metadata = 100;
  common.MetadataUpdateEnum metadata_update_behavior = 101;
}
message UpdateResourceMappingResponse {
  ResourceMapping resource_mapping = 1;
}

message DeleteResourceMappingRequest {
  string id = 1 [(buf.validate.field).required = true];
}
message DeleteResourceMappingResponse {
  ResourceMapping resource_mapping = 1;
}

service ResourceMappingService {
  /*
     Resource Mapping Groups
  */

  rpc ListResourceMappingGroups(ListResourceMappingGroupsRequest) returns (ListResourceMappingGroupsResponse) {
    option (google.api.http) = {get: "/resource-mapping-groups"};
  }

  rpc GetResourceMappingGroup(GetResourceMappingGroupRequest) returns (GetResourceMappingGroupResponse) {
    option (google.api.http) = {get: "/resource-mapping-groups/{id}"};
  }

  rpc GetResourceMappingGroupByFQN(GetResourceMappingGroupByFQNRequest) returns (GetResourceMappingGroupByFQNResponse) {
    option (google.api.http) = {get: "/resource-mapping-groups/fqn/{fqn}"};
  }

  rpc CreateResourceMappingGroup(CreateResourceMappingGroupRequest) returns (CreateResourceMappingGroupResponse) {
    option (google.api.http) = {
      post: "/resource-mapping-groups"
      body: "*"
    };
  }

  rpc UpdateResourceMappingGroup(UpdateResourceMappingGroupRequest) returns (UpdateResourceMappingGroupResponse) {
    option (google.api.http) = {
      patch: "/resource-mapping-groups/{id}"
      body: "*"
    };
  }

  rpc DeleteResourceMappingGroup(DeleteResourceMappingGroupRequest) returns (DeleteResourceMappingGroupResponse) {
    option (google.api.http) = {delete: "/resource-mapping-groups/{id}"};
  }

  /*
     Resource Mappings
  */

  rpc ListResourceMappings(ListResourceMappingsRequest) returns (ListResourceMappingsResponse) {
    option (google.api.http) = {get: "/resource-mappings"};
  }

  rpc GetResourceMapping(GetResourceMappingRequest) returns (GetResourceMappingResponse) {
    option (google.api.http) = {get: "/resource-mappings/{id}"};
  }

  rpc CreateResourceMapping(CreateResourceMappingRequest) returns (CreateResourceMappingResponse) {
    option (google.api.http) = {
      post: "/resource-mappings"
      body: "*"
    };
  }
  
  rpc UpdateResourceMapping(UpdateResourceMappingRequest) returns (UpdateResourceMappingResponse) {
    option (google.api.http) = {
      patch: "/resource-mappings/{id}"
      body: "*"
    };
  }

  rpc DeleteResourceMapping(DeleteResourceMappingRequest) returns (DeleteResourceMappingResponse) {
    option (google.api.http) = {delete: "/resource-mappings/{id}"};
  }
}
