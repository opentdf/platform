syntax = "proto3";

package idpplugin;

import "authorization/authorization.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/any.proto";

/// IDP will only handle requests for entities providing email, username, or jwt

// PE (Person Entity) or NPE (Non-Person Entity)
message IdpEntity {
  string id = 1; // ephemeral id for tracking between request and response
  // Standard entity types supported by the platform
  oneof entity_type {
    string email_address = 2;
    string user_name = 3;
    string jwt = 4;
    authorization.EntityCustom custom = 5;
  }
}

/*
   Example: Get idp attributes for bob and alice (both represented using an email address
   {
     "entities": [
       {
         "id": "e1",
         "emailAddress": "bob@example.org"
       },
       {
         "id": "e2",
         "emailAddress": "alice@example.org"
       }
     ]
   }

*/
message IdpPluginRequest {
    repeated IdpEntity entities = 1;
}


message IdpEntityRepresentation {
  repeated google.protobuf.Struct additional_props = 1;
  string original_id = 2; // ephemeral entity id from the request
}


/*
   Example: Get idp attributes for bob and alice
   {
     "entity_representations": [
       {
         "idp_entity_id": "e1",
         "additional_props": {"someAttr1":"someValue1"}
       },
       {
         "idp_entity_id": "e2",
         "additional_props": {"someAttr2":"someValue2"}
       }
     ]
   }

*/
message IdpPluginResponse {
  repeated IdpEntityRepresentation entity_representations = 1;
}

message EntityNotFoundError {
  string user = 1;
  string message = 2;
  repeated google.protobuf.Any details = 3;
}
