syntax = "proto3";

package namespaces;

import "buf/validate/validate.proto";
import "google/api/annotations.proto";

message Namespace {
  // generated uuid in database
  string id = 1;
  // used to partition Attribute Definitions, support by namespace AuthN and enable federation
  string name = 5 [
    (buf.validate.field).required = true,
    (buf.validate.field).string.max_len = 253,
    (buf.validate.field).cel = {
      id: "namespace_format",
      message: "Namespace must be a valid hostname. It should include at least one dot, with each segment (label) starting and ending with an alphanumeric character. Each label must be 1 to 63 characters long, allowing hyphens but not as the first or last character. The top-level domain (the last segment after the final dot) must consist of at least two alphabetic characters.",
      expression: "this.matches('^([a-zA-Z0-9]([a-zA-Z0-9\\\\-]{0,61}[a-zA-Z0-9])?\\\\.)+[a-zA-Z]{2,}$')"
    }
  ];
}

/*

    Namespace Service Definitions

*/

message GetNamespaceRequest {
  string id = 1 [(buf.validate.field).required = true];
}
message GetNamespaceResponse {
  Namespace namespace = 1;
}

message ListNamespacesRequest {}
message ListNamespacesResponse {
  repeated Namespace namespaces = 1;
}

message CreateNamespaceRequest {
  string name = 1 [(buf.validate.field).required = true];
}
message CreateNamespaceResponse {
  Namespace namespace = 1;
}

message UpdateNamespaceRequest {
  string id = 1 [(buf.validate.field).required = true];
  string name = 2 [(buf.validate.field).required = true];
}
message UpdateNamespaceResponse {
  Namespace namespace = 1;
}

message DeleteNamespaceRequest {
  string id = 1 [(buf.validate.field).required = true];
}
message DeleteNamespaceResponse {}

service NamespaceService {
  rpc GetNamespace(GetNamespaceRequest) returns (GetNamespaceResponse) {
    option (google.api.http) = {
      get: "/attributes/namespaces/{id}"
    };
  }
  rpc ListNamespaces(ListNamespacesRequest) returns (ListNamespacesResponse) {
      option (google.api.http) = {
      get: "/attributes/namespaces"
      };
  }
  rpc CreateNamespace(CreateNamespaceRequest) returns (CreateNamespaceResponse) {
      option (google.api.http) = {
      post: "/attributes/namespaces"
      };
  }
  rpc UpdateNamespace(UpdateNamespaceRequest) returns (UpdateNamespaceResponse) {
      option (google.api.http) = {
      put: "/attributes/namespaces/{id}"
      };
  }
  rpc DeleteNamespace(DeleteNamespaceRequest) returns (DeleteNamespaceResponse) {
      option (google.api.http) = {
      delete: "/attributes/namespaces/{id}"
      };
  }
}

/*

    Namespace Service Examples

    Create a Namespace:
        Request:
            grpcurl -d '{"name":"example.com"}' -plaintext localhost:9000 namespaces.NamespaceService/CreateNamespace
        Response: 
            {
                "namespace": {
                    "id": "b3d9e3e0-0b0a-4e1a-8b0a-0b0a0b0a0b0a",
                    "name": "example.com"
                }
            }

    List Namespaces (assuming 3 have been created)
        Request:
            grpcurl -plaintext -d '{}' localhost:9000 namespaces.NamespaceService/ListNamespaces
        Response:
            {
                "namespaces": [
                    {
                        "id": "b3d9e3e0-0b0a-4e1a-8b0a-0b0a0b0a0b0a",
                        "name": "example.com"
                    },
                    {
                        "id": "b3d9e3e0-0b0a-4e1a-8b0a-0b0a0b0a0b0b",
                        "name": "loremipsum.com"
                    },
                    {
                        "id": "b3d9e3e0-0b0a-4e1a-8b0a-0b0a0b0a0b0c",
                        "name": "helloworld.com"
                    }
                ]
            }

    Get a Namespace:
        Request:
            grpcurl -plaintext -d '{"id":"453b4bb8-1098-480f-ad13-38b5ef903896"}' localhost:9000 namespaces.NamespaceService/GetNamespace
        Response:
            {
                "namespace": {
                    "id": "b3d9e3e0-0b0a-4e1a-8b0a-0b0a0b0a0b0a",
                    "name": "example.com"
                }
            }
    
    Update a Namespace:
        Request:
            grpcurl -plaintext -d '{"id":"453b4bb8-1098-480f-ad13-38b5ef903896","name":"example-test.com"}' localhost:9000 namespaces.NamespaceService/UpdateNamespace
        Response:
            {
                "namespace": {
                    "id": "b3d9e3e0-0b0a-4e1a-8b0a-0b0a0b0a0b0a",
                    "name": "example.com"
                }
            }

    Delete a Namespace:
        Request:
            grpcurl -plaintext -d '{"id":"453b4bb8-1098-480f-ad13-38b5ef903896"}' localhost:9000 namespaces.NamespaceService/DeleteNamespace
        Response:
            {}
*/